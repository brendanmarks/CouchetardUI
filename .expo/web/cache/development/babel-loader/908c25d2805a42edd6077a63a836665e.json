{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Camera } from 'expo-camera';\nimport React, { useState } from 'react';\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cameraRef = _useState4[0],\n      setCameraRef = _useState4[1];\n\n  var _useState5 = useState(Camera.Constants.Type.back),\n      _useState6 = _slicedToArray(_useState5, 2),\n      type = _useState6[0],\n      setType = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, null);\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, null, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(Camera, {\n    style: {\n      flex: 1\n    },\n    type: type,\n    ref: function ref(_ref) {\n      setCameraRef(_ref);\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'transparent',\n      justifyContent: 'flex-end'\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      flex: 0.1,\n      alignSelf: 'flex-end'\n    },\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      marginBottom: 10,\n      color: 'white'\n    }\n  }, \" Flip \")), React.createElement(TouchableOpacity, {\n    style: {\n      alignSelf: 'center'\n    },\n    onPress: function _callee2() {\n      var photo;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!cameraRef) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(cameraRef.takePictureAsync());\n\n            case 3:\n              photo = _context2.sent;\n              console.log('photo', photo);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, React.createElement(View, {\n    style: {\n      borderWidth: 2,\n      borderRadius: \"50%\",\n      borderColor: 'white',\n      height: 50,\n      width: 50,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(View, {\n    style: {\n      borderWidth: 2,\n      borderRadius: \"50%\",\n      borderColor: 'white',\n      height: 40,\n      width: 40,\n      backgroundColor: 'white'\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/Brend/CouchetardUI/App.tsx"],"names":["Camera","React","useState","App","hasPermission","setHasPermission","cameraRef","setCameraRef","Constants","Type","back","type","setType","useEffect","requestPermissionsAsync","status","flex","ref","backgroundColor","justifyContent","alignSelf","front","fontSize","marginBottom","color","takePictureAsync","photo","console","log","borderWidth","borderRadius","borderColor","height","width","display","alignItems"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Camera } from 'expo-camera';\nimport React, { Component, useState } from 'react'\n\nexport default function App() {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [cameraRef, setCameraRef] = useState(null)\n  const [type, setType] = useState(Camera.Constants.Type.back);\nuseEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\nif (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n  return (\n    <View style={{ flex: 1 }}>\n      <Camera style={{ flex: 1 }} type={type} ref={ref => {\n        setCameraRef(ref) ;\n  }}>\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: 'transparent',\n            justifyContent: 'flex-end'\n          }}>\n          <TouchableOpacity\n            style={{\n              flex: 0.1,\n              alignSelf: 'flex-end'\n            }}\n            onPress={() => {\n              setType(\n                type === Camera.Constants.Type.back\n                  ? Camera.Constants.Type.front\n                  : Camera.Constants.Type.back\n              );\n            }}>\n            <Text style={{ fontSize: 18, marginBottom: 10, color: 'white' }}> Flip </Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={{alignSelf: 'center'}} onPress={async() => {\n            if(cameraRef){\n              let photo = await cameraRef.takePictureAsync();\n              console.log('photo', photo);\n            }\n          }}>\n            <View style={{ \n               borderWidth: 2,\n               borderRadius:\"50%\",\n               borderColor: 'white',\n               height: 50,\n               width:50,\n               display: 'flex',\n               justifyContent: 'center',\n               alignItems: 'center'}}\n            >\n              <View style={{\n                 borderWidth: 2,\n                 borderRadius:\"50%\",\n                 borderColor: 'white',\n                 height: 40,\n                 width:40,\n                 backgroundColor: 'white'}} >\n              </View>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </Camera>\n    </View>\n  );\n}"]},"metadata":{},"sourceType":"module"}